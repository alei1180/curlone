// BSLLS:LatinAndCyrillicSymbolInWord-off

Перем _ОписаниеЗапроса; // ОписаниеЗапроса
Перем _СтруктураURL; // РазборURL
Перем _ТекстовыеДанные; // Массив из ПередаваемыйТекст
Перем _ПрочитанныеФайлы; // Массив из Структура:
                         //   - ПередаваемыйФайл - см. ПередаваемыйФайл
                         //   - ИмяПеременной - Строка
Перем _Конструктор; // КонструкторПрограммногоКода
Перем _РазделительПараметров; // Строка
Перем _КонкатенацияСПереносомСтрокиИРазделителем; // Строка
Перем _КонкатенацияСПереносомСтроки; // Строка
Перем _СимволНачалаПараметровЗапроса; // Строка
Перем _СимволКавычки; // Строка

Процедура ПриСозданииОбъекта(
		ОписаниеЗапроса,
		СтруктураURL,
		ТекстовыеДанные = Неопределено,
		ПрочитанныеФайлы = Неопределено
	)

	_ОписаниеЗапроса = ОписаниеЗапроса;
	_СтруктураURL = СтруктураURL;
	_ТекстовыеДанные = ТекстовыеДанные;
	_ПрочитанныеФайлы = ПрочитанныеФайлы;
	_Конструктор = Новый КонструкторПрограммногоКода(_ОписаниеЗапроса.ИменаПеременных);

	ИнициализироватьКонстанты();

КонецПроцедуры

#Область ПрограммныйИнтерфейс

Функция Получить() Экспорт

	ПараметрыЗапросаСтрокой = ДополнитьСтрокуЧерезРазделитель(
		ПараметрыЗапросаИзURLСтрокой(), 
		_РазделительПараметров, 
		ПараметрыЗапросаИзТекстовыхДанныхСтрокой()
	);

	ПараметрыЗапросаИзФайловСтрокой = ПараметрыЗапросаИзФайловСтрокой();

	ЕстьПараметрыЗапроса = Не ПустаяСтрока(ПараметрыЗапросаСтрокой)
		Или Не ПустаяСтрока(ПараметрыЗапросаИзФайловСтрокой);

	Адрес = _СтруктураURL.Путь;
	Фрагмент = "";

	Если ЕстьПараметрыЗапроса Тогда
		Адрес = Адрес + _СимволНачалаПараметровЗапроса + ПараметрыЗапросаСтрокой;
	КонецЕсли;

	Если Не ПустаяСтрока(_СтруктураURL.Фрагмент) Тогда
		Фрагмент = "#" + _СтруктураURL.Фрагмент;
	КонецЕсли;

	Если ПустаяСтрока(ПараметрыЗапросаИзФайловСтрокой) Тогда
		Возврат АдресРесурсаБезПараметровИзФайла(Адрес, Фрагмент);
	Иначе
		Возврат АдресРесурсаСПараметрамиИзФайла(Адрес, Фрагмент, ПараметрыЗапросаИзФайловСтрокой);
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеАдреса

Функция АдресРесурсаБезПараметровИзФайла(Адрес, Фрагмент)
			
	Результат = Адрес + Фрагмент;
		
	Если ЗначениеЗаполнено(Результат) Тогда
		Результат = _Конструктор.ПараметрВСтроку(Результат);
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция АдресРесурсаСПараметрамиИзФайла(Адрес, Фрагмент, ПараметрыЗапросаИзФайловСтрокой)
			
	ВозможноОднойСтрокой = ПустаяСтрока(Фрагмент) И СтрЧислоСтрок(ПараметрыЗапросаИзФайловСтрокой) = 1;

	Если ВозможноОднойСтрокой Тогда
		Возврат АдресРесурсаСПараметрамиИзФайлаОднострочный(Адрес, ПараметрыЗапросаИзФайловСтрокой);
	Иначе
		Возврат АдресРесурсаСПараметрамиИзФайлаМногострочный(Адрес, Фрагмент, ПараметрыЗапросаИзФайловСтрокой);
	КонецЕсли;

КонецФункции

Функция АдресРесурсаСПараметрамиИзФайлаОднострочный(Адрес, ПараметрыЗапросаИзФайловСтрокой)

	РазделительДобавлен = Прав(Адрес, 1) = _СимволНачалаПараметровЗапроса;
	Разделитель = ?(РазделительДобавлен, "", _РазделительПараметров);

	Возврат ""
		+ _Конструктор.ПараметрВСтроку(Адрес + Разделитель)
		+ " + "
		+ ПараметрыЗапросаИзФайловСтрокой;

КонецФункции

Функция АдресРесурсаСПараметрамиИзФайлаМногострочный(Адрес, Фрагмент, ПараметрыЗапросаИзФайловСтрокой)

	Результат = _Конструктор.ПараметрВСтроку(Адрес);

	// Адрес уже завершается "?" - параметры добавляются напрямую	
	Если Прав(Адрес, 1) = _СимволНачалаПараметровЗапроса  Тогда

		Результат = Результат 
			+ _КонкатенацияСПереносомСтроки 
			+ ПараметрыЗапросаИзФайловСтрокой;

	// Параметры - строковый литерал
	ИначеЕсли Лев(ПараметрыЗапросаИзФайловСтрокой, 1) = _СимволКавычки Тогда

		Результат = Результат 
			+ _КонкатенацияСПереносомСтроки
			+ _СимволКавычки + _РазделительПараметров
			+ Сред(ПараметрыЗапросаИзФайловСтрокой, 2);

	// Параметры - переменная или выражение
	Иначе

		Результат = Результат 
			+ СтрШаблон(_КонкатенацияСПереносомСтрокиИРазделителем, _РазделительПараметров)
			+ ПараметрыЗапросаИзФайловСтрокой;

	КонецЕсли;
	
	Если Не ПустаяСтрока(Фрагмент) Тогда
		Результат = Результат 
			+ _КонкатенацияСПереносомСтроки
			+ _Конструктор.ПараметрВСтроку(Фрагмент);
	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ФормированиеПараметровЗапроса

Функция ПараметрыЗапросаИзURLСтрокой()
	
	ЧастиСтроки = Новый Массив();

	Для Каждого Параметр Из _СтруктураURL.ПараметрыЗапроса Цикл

		Если ЗначениеЗаполнено(Параметр.Значение) Тогда

			Значения = Новый Массив();
			Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда
				Значения = Параметр.Значение;
			Иначе
				Значения.Добавить(Параметр.Значение);
			КонецЕсли;

			Для Каждого Значение Из Значения Цикл
				КлючИЗначение = СтрШаблон("%1=%2",
					Параметр.Ключ,
					Значение);
				ЧастиСтроки.Добавить(КлючИЗначение);
			КонецЦикла;

		Иначе

			ЧастиСтроки.Добавить(Параметр.Ключ);

		КонецЕсли;

	КонецЦикла;

	Возврат СтрСоединить(ЧастиСтроки, _РазделительПараметров);

КонецФункции

Функция ПараметрыЗапросаИзТекстовыхДанныхСтрокой()
		
	Если _ТекстовыеДанные = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	ЧастиСтроки = Новый Массив();

	Для Каждого ПередаваемыйТекст Из _ТекстовыеДанные Цикл

		Если ПередаваемыйТекст.Назначение <> НазначенияПередаваемыхДанных.СтрокаЗапроса Тогда
			Продолжить;
		КонецЕсли;

		Если ЧастиСтроки.Количество() И Не ПустаяСтрока(ПередаваемыйТекст.РазделительТелаЗапроса) Тогда
			ЧастиСтроки.Добавить(ПередаваемыйТекст.РазделительТелаЗапроса);
		КонецЕсли;

		ЧастиСтроки.Добавить(ПередаваемыйТекст.ПолноеЗначение());
	
	КонецЦикла;

	Возврат СтрСоединить(ЧастиСтроки);

КонецФункции

Функция ПараметрыЗапросаИзФайловСтрокой()
		
	Если _ПрочитанныеФайлы = Неопределено Тогда
		Возврат "";
	КонецЕсли;

	ЧастиСтроки = Новый Массив();

	Для Каждого ПрочитанныйФайл Из _ПрочитанныеФайлы Цикл
		
		ПередаваемыйФайл = ПрочитанныйФайл.ПередаваемыйФайл;

		Если ПередаваемыйФайл.Назначение <> НазначенияПередаваемыхДанных.СтрокаЗапроса Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(ПередаваемыйФайл.ИмяПоля) Тогда
			Префикс = ПередаваемыйФайл.ИмяПоля + "=";
			ПрефиксВКоде = _Конструктор.ПараметрВСтроку(Префикс) + " + ";
		Иначе
			Префикс = "";
			ПрефиксВКоде = "";
		КонецЕсли;

		Если ЧастиСтроки.Количество() = 0 Тогда
			ЧастиСтроки.Добавить(ПрефиксВКоде);
		Иначе
			ЧастиСтроки.Добавить(СтрШаблон(_КонкатенацияСПереносомСтрокиИРазделителем, _РазделительПараметров + Префикс));
		КонецЕсли;

		ЧастиСтроки.Добавить(ПрочитанныйФайл.ИмяПеременной);

	КонецЦикла;
	
	Возврат СтрСоединить(ЧастиСтроки);

КонецФункции

#КонецОбласти

Функция ДополнитьСтрокуЧерезРазделитель(Строка, Разделитель, ДополняемаяСтрока)

	ЧастиСтроки = Новый Массив();

	Если ЗначениеЗаполнено(Строка) Тогда
		ЧастиСтроки.Добавить(Строка);
	КонецЕсли;

	Если ЗначениеЗаполнено(ДополняемаяСтрока) Тогда	

		Если ЧастиСтроки.Количество() > 0 Тогда
			ЧастиСтроки.Добавить(Разделитель);
		КонецЕсли;

		ЧастиСтроки.Добавить(ДополняемаяСтрока);

	КонецЕсли;

	Возврат СтрСоединить(ЧастиСтроки);

КонецФункции

Процедура ИнициализироватьКонстанты()
	
	_РазделительПараметров = "&";
	_СимволНачалаПараметровЗапроса = "?";
	_СимволКавычки = """";
	
	_КонкатенацияСПереносомСтрокиИРазделителем = "
	|	+ ""%1"" + ";
	_КонкатенацияСПереносомСтроки = "
	|	+ ";
	
КонецПроцедуры

#КонецОбласти