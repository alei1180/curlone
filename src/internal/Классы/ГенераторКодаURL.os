// BSLLS:LatinAndCyrillicSymbolInWord-off

Перем _ОписаниеЗапроса; // ОписаниеЗапроса
Перем _СтруктураURL; // ПарсерURL
Перем _ТекстовыеДанные; // Массив из ПередаваемыйТекст
Перем _ПрочитанныеФайлы; // Массив из Структура:
                         //   - ПередаваемыйФайл - см. ПередаваемыйФайл
                         //   - ИмяПеременной - Строка
Перем _Конструктор; // КонструкторПрограммногоКода

Процедура ПриСозданииОбъекта(
		ОписаниеЗапроса,
		СтруктураURL,
		ТекстовыеДанные = Неопределено,
		ПрочитанныеФайлы = Неопределено
	 )

	_ОписаниеЗапроса = ОписаниеЗапроса;
	_СтруктураURL = СтруктураURL;
	_ТекстовыеДанные = ТекстовыеДанные;
	_ПрочитанныеФайлы = ПрочитанныеФайлы;
	_Конструктор = Новый КонструкторПрограммногоКода(ОписаниеЗапроса.ИменаПеременных);

КонецПроцедуры

Функция Получить() Экспорт
	
	// Схема
	URL = СтрШаблон("%1://", _СтруктураURL.Схема);

	// Аутентификация
	Пользователь = _СтруктураURL.Аутентификация.Пользователь;
	Пароль = _СтруктураURL.Аутентификация.Пароль;

	Если Не ПустаяСтрока(Пользователь) Или Не ПустаяСтрока(Пароль) Тогда
		URL = URL + СтрШаблон("%1:%2@", Пользователь, Пароль);
	КонецЕсли;

	// Сервер
	URL = URL + _СтруктураURL.Сервер;

	// Порт
	Если ЗначениеЗаполнено(_СтруктураURL.Порт) Тогда
		URL = URL + ":" + Формат(_СтруктураURL.Порт, "ЧГ=");
	КонецЕсли;

	URL = _Конструктор.ПараметрВСтроку(URL);

	// Адрес ресурса
	АдресРесурса = Новый ГенераторКодаАдресРесурса(
		_ОписаниеЗапроса,
		_СтруктураURL,
		_ТекстовыеДанные,
		_ПрочитанныеФайлы
	).Получить();

	Если ПустаяСтрока(АдресРесурса) Тогда
		Возврат URL;
	КонецЕсли;

	Кавычка = """";
	Если СтрЗаканчиваетсяНа(URL, Кавычка) И СтрНачинаетсяС(АдресРесурса, Кавычка) Тогда
		URL = Сред(URL, 1, СтрДлина(URL) - 1) + Сред(АдресРесурса, 2);
	Иначе
		URL = СтрШаблон("%1 + %2", URL, АдресРесурса);
	КонецЕсли;

	Возврат URL;

КонецФункции