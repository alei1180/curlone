#Использовать tokenizer

Перем Спецификация; // Массив
Перем Результат; // Структура
Перем ИмяПараметра; // Строка
Перем БылРазделитель; // Булево
Перем ЭтоНовоеЗначение; // Булево
Перем ЗначениеПараметра; // Строка, Неопределено

#Область ПрограммныйИнтерфейс

// Парсит значение опции -F (--form)
//
// Параметры:
//   Строка - Строка - Значение опции
//
// Возвращаемое значение:
//   Структура:
//     * ИмяПоля - Строка - Имя поля
//     * Значения - Массив из Структура:
//       ** Значение - Строка - Значение
//       ** Параметры - Соответствие из КлючИЗначение:
//           *** Ключ - Строка - Имя параметра. Например: type, filename, headers
//           *** Значение - Строка, Соответствие - Значение параметра. Тип Соответствие только для параметра headers
Функция Распарсить(Строка) Экспорт
	
	Результат = Новый Структура("ИмяПоля, Значения", "", Новый Массив());
	
	Токенайзер = Новый Токенайзер(Спецификация);
	Токенайзер.Инит(Строка);
	
	ИмяПараметра = "";
	ЗначениеПараметра = Неопределено;
	ОткрытаДвойнаяКавычка = Ложь;
	БылРазделитель = Ложь;
	ЭтоНовоеЗначение = Истина;
	ЭтоФайл = Ложь;

	Пока Токенайзер.ЕстьЕщеТокены() Цикл

		Токен = Токенайзер.СледующийТокен();

		Если Токен = Неопределено Тогда
			Прервать;
		КонецЕсли;

		ТипТокена = Токен.ТипТокена();

		Если ТипТокена = "ДвойнаяКавычка" Тогда

			Если ОткрытаДвойнаяКавычка 
				Или Не ЗначениеЗаполнено(ЗначениеПараметра) 
				Или ЭтоСлужебныйСимволФайла(ЗначениеПараметра) Тогда

				ОткрытаДвойнаяКавычка = Не ОткрытаДвойнаяКавычка;
				
				Если Не ОткрытаДвойнаяКавычка Тогда
					ПроверитьИДобавитьПараметр();
				КонецЕсли;

			Иначе

				ДополнитьЗначениемТокена(Токен);
				
			КонецЕсли;

		ИначеЕсли ОткрытаДвойнаяКавычка Или ТипТокена = "Строка" Тогда

			ДополнитьЗначениемТокена(Токен);		

		ИначеЕсли ТипТокена = "ТочкаСЗапятой" Тогда

			ПроверитьИДобавитьПараметр();

		ИначеЕсли ТипТокена = "Равенство" Тогда

			Если БылРазделитель Тогда
				ДополнитьЗначениемТокена(Токен);
			Иначе
				БылРазделитель = Истина;
				ЗначениеПараметра = "";
			КонецЕсли;

		ИначеЕсли ТипТокена = "Собачка" Тогда

			Если Не ЗначениеЗаполнено(ЗначениеПараметра) 
				И Результат.Значения.Количество() = 0 Тогда
				ЭтоФайл = Истина;
			КонецЕсли;

			ДополнитьЗначениемТокена(Токен);

		ИначеЕсли ТипТокена = "Запятая" Тогда

			Если БылРазделитель И ЭтоФайл Тогда
				ПроверитьИДобавитьПараметр();
				ЭтоНовоеЗначение = Истина;
				БылРазделитель = Истина;
			Иначе
				ДополнитьЗначениемТокена(Токен);
			КонецЕсли;

		Иначе
			ВызватьИсключение "Ошибка при парсинге значения опции -F, --form";
		КонецЕсли;

	КонецЦикла;

	ПроверитьИДобавитьПараметр();

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриСозданииОбъекта()

	Спецификация = Новый Массив();
	Спецификация.Добавить(Новый СпецификацияТокенСимвол("""", "ДвойнаяКавычка"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(";", "ТочкаСЗапятой"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол("=", "Равенство"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол("@", "Собачка"));
	Спецификация.Добавить(Новый СпецификацияТокенСимвол(",", "Запятая"));
	Спецификация.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[^=;,""]+"), "Строка")); 
	
КонецПроцедуры

Процедура ДобавитьЗаголовок(Заголовки, СтрокаЗаголовка)

	ПозицияДвоеточия = СтрНайти(СтрокаЗаголовка, ":");

	Если ПозицияДвоеточия Тогда
		Имя = Сред(СтрокаЗаголовка, 1, ПозицияДвоеточия - 1);
		Значение = СокрЛП(Сред(СтрокаЗаголовка, ПозицияДвоеточия + 1));
	Иначе
		Имя = СтрокаЗаголовка;
		Значение = "";
	КонецЕсли;

	Заголовки.Вставить(Имя, Значение);

КонецПроцедуры

Процедура ДополнитьЗначениемТокена(Токен)

	Если БылРазделитель Тогда

		Если ЗначениеПараметра = Неопределено Тогда
			ЗначениеПараметра = "";
		КонецЕсли;
		
		ЗначениеПараметра = ЗначениеПараметра + Токен.Значение();

	Иначе

		ИмяПараметра = ИмяПараметра + Токен.Значение();

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьИДобавитьПараметр()
	
	Если Не БылРазделитель Тогда
		Возврат;
	КонецЕсли;

	Если Результат.Значения.Количество() = 0 Тогда
		Результат.ИмяПоля = ?(ЗначениеЗаполнено(ИмяПараметра), ИмяПараметра, "null");
	КонецЕсли;

	Если ЭтоНовоеЗначение Тогда
		СтруктураЗначения = Новый Структура();
		СтруктураЗначения.Вставить("Значение", СокрЛП(ЗначениеПараметра));
		СтруктураЗначения.Вставить("Параметры", Новый Соответствие());
		СтруктураЗначения.Параметры.Вставить("headers", Новый Соответствие());

		Результат.Значения.Добавить(СтруктураЗначения);			
	Иначе
		ПараметрыЗначения = Результат.Значения[Результат.Значения.ВГраница()].Параметры;

		Если ИмяПараметра = "headers" Тогда
			ДобавитьЗаголовок(ПараметрыЗначения["headers"], СокрЛП(ЗначениеПараметра));
		Иначе
			ПараметрыЗначения.Вставить(ИмяПараметра, СокрЛП(ЗначениеПараметра));
		КонецЕсли;	
	КонецЕсли;

	ИмяПараметра = "";
	БылРазделитель = Ложь;
	ЭтоНовоеЗначение = Ложь;
	ЗначениеПараметра = Неопределено;

КонецПроцедуры

Функция ЭтоСлужебныйСимволФайла(Символ)
	Возврат Символ = "@" Или Символ = "<";
КонецФункции

#КонецОбласти