
Перем _ОписаниеЗапроса;  // ОписаниеЗапроса
Перем _НазначениеДанных; // НазначенияПередаваемыхДанных
Перем _ПрочитанныеФайлы; // Массив из Структура:
                         //   * ПередаваемыйФайл - ПередаваемыйФайл
                         //   * ИмяПеременной - Строка
Перем _Конструктор;      // КонструкторПрограммногоКода
Перем _ЧастиКода;        // Масств из Строка
Перем _НуженРазделитель; // Булево

// Конструктор объекта.
//
// Параметры:
//   ОписаниеЗапроса  - ОписаниеЗапроса
//   НазначениеДанных - НазначенияПередаваемыхДанных
//   ПрочитанныеФайлы - Массив из Структура:
//                        * ПередаваемыйФайл - ПередаваемыйФайл
//                        * ИмяПеременной - Строка
Процедура ПриСозданииОбъекта(ОписаниеЗапроса, НазначениеДанных, ПрочитанныеФайлы)

	_ОписаниеЗапроса = ОписаниеЗапроса;
	_НазначениеДанных = НазначениеДанных;
	_ПрочитанныеФайлы = ПрочитанныеФайлы;
	_Конструктор = Новый КонструкторПрограммногоКода(_ОписаниеЗапроса.ИменаПеременных);

КонецПроцедуры

#Область ПрограммныйИнтерфейс

// Формирует данные запроса в виде программного кода.
//
// Возвращаемое значение:
//   Строка
Функция Получить() Экспорт

	_ЧастиКода = Новый Массив();
	_НуженРазделитель = Ложь;

	ДобавитьТекстовыеДанные();
	ДобавитьФайлы();

	Возврат СтрСоединить(_ЧастиКода);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьТекстовыеДанные()
	
	МассивТекстовыхДанных = Новый Массив();

	Для Каждого ПередаваемыйТекст Из _ОписаниеЗапроса.ОтправляемыеТекстовыеДанные Цикл

		Если Не ПередаваемыйТекст.Назначение = _НазначениеДанных Тогда
			Продолжить;
		КонецЕсли;

		Разделитель = ПередаваемыйТекст.РазделительТелаЗапроса;
		Если _НуженРазделитель И Не ПустаяСтрока(Разделитель) Тогда
			МассивТекстовыхДанных.Добавить(Разделитель);
		КонецЕсли;

		МассивТекстовыхДанных.Добавить(ПередаваемыйТекст.ПолноеЗначение());

		_НуженРазделитель = Истина;

	КонецЦикла;

	Если МассивТекстовыхДанных.Количество() Тогда
		_ЧастиКода.Добавить(_Конструктор.ПараметрВСтроку(СтрСоединить(МассивТекстовыхДанных)));
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьФайлы()

	КонкатенацияСПереносомСтрокиИРазделителя = "
	|	+ ""%1"" + %2";
	КонкатенацияСПереносомСтроки = "
	|	+ %1";

	Для Каждого ПрочитанныйФайл Из _ПрочитанныеФайлы Цикл

		ПередаваемыйФайл = ПрочитанныйФайл.ПередаваемыйФайл;

		Если Не ПередаваемыйФайл.Назначение = _НазначениеДанных Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(ПередаваемыйФайл.ИмяПоля) Тогда
			Префикс = ПередаваемыйФайл.ИмяПоля + "=";
			ПрефиксВКоде = _Конструктор.ПараметрВСтроку(Префикс) + " + ";
		Иначе
			Префикс = "";
			ПрефиксВКоде = "";
		КонецЕсли;

		ИмяПеременной = ПрочитанныйФайл.ИмяПеременной;
		Разделитель = ПередаваемыйФайл.РазделительТелаЗапроса;
		Если _НуженРазделитель Тогда
			
			Если Не ПустаяСтрока(Разделитель) Тогда	

				Текст = СтрШаблон(КонкатенацияСПереносомСтрокиИРазделителя, 
					ПередаваемыйФайл.РазделительТелаЗапроса + Префикс,
					ИмяПеременной);

				_ЧастиКода.Добавить(Текст);

			Иначе

				Текст = СтрШаблон(КонкатенацияСПереносомСтроки, ПрефиксВКоде + ИмяПеременной);
				_ЧастиКода.Добавить(Текст);

			КонецЕсли;

		Иначе

			_ЧастиКода.Добавить(ПрефиксВКоде + ИмяПеременной);

		КонецЕсли;

		_НуженРазделитель = Истина;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти