// BSLLS:ExportVariables-off

// Copyright 2019-2020 Vladimir Bondarevskiy
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
   
Перем Схема Экспорт; // Схема
Перем Аутентификация Экспорт; // Параметры аутентификации
Перем Сервер Экспорт; // Сервер
Перем Порт Экспорт; // Порт
Перем Путь Экспорт; // Путь на сервере
Перем ПараметрыЗапроса Экспорт; // Часть адреса после ?
Перем Фрагмент Экспорт; // Часть адреса после #

Процедура ПриСозданииОбъекта(Знач URL)

	Схема = "";
	Аутентификация = Новый Структура("Пользователь, Пароль", "", "");
	Сервер = "";
	Порт = "";
	Путь = "";
	ПараметрыЗапроса = Новый Соответствие;
	Фрагмент = "";

	РазобратьURL(URL);

КонецПроцедуры

Процедура РазобратьURL(Знач URL)

	ПереданныйURL = URL;

	РазбитьСтрокуПоРазделителю(Схема, URL, "://");
	Схема = НРег(Схема);

	Результат = РазделитьПоПервомуНайденномуРазделителю(URL, СтрРазделить("/,?,#", ","));
	URL = Результат[0];
	Если ЗначениеЗаполнено(Результат[2]) Тогда
		Путь = Результат[2] + Результат[1];
	КонецЕсли;

	АутентификацияСтрока = "";
	РазбитьСтрокуПоРазделителю(АутентификацияСтрока, URL, "@");
	Если ЗначениеЗаполнено(АутентификацияСтрока) Тогда

		АутентификацияЧасти = СтрРазделить(АутентификацияСтрока, ":");
		Аутентификация.Пользователь = АутентификацияЧасти[0];
		
		Если АутентификацияЧасти.Количество() > 1 Тогда
			Аутентификация.Пароль = АутентификацияЧасти[1];
		КонецЕсли;

	КонецЕсли;

	// IPv6
	РазбитьСтрокуПоРазделителю(Сервер, URL, "]");
	Если ЗначениеЗаполнено(Сервер) Тогда
		Сервер = Сервер + "]";
	КонецЕсли;

	URL = СтрЗаменить(URL, "/", "");

	РазбитьСтрокуПоРазделителю(Порт, URL, ":", Истина);

	Если Не ЗначениеЗаполнено(Сервер) Тогда
		Сервер = URL;
	КонецЕсли;

	Если ЗначениеЗаполнено(Порт) Тогда
		Попытка
			Порт = Число(Порт);
		Исключение
			ВызватьИсключение СтрШаблон("Не удалось получить номер порта из URL '%1'", ПереданныйURL);
		КонецПопытки;
	Иначе
		Порт = 0;
	КонецЕсли;

	РазбитьСтрокуПоРазделителю(Фрагмент, Путь, "#", Истина);

	ЗаполнитьПараметрыЗапроса(Путь);

	Если Не ЗначениеЗаполнено(Схема) Тогда
		Схема = "http";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗапроса(Путь)

	Запрос = "";
	РазбитьСтрокуПоРазделителю(Запрос, Путь, "?", Истина);

	РазбитьСтрокуПоРазделителю(Запрос, Путь, "?", Истина);
	Для Каждого СтрокаКлючРавноПараметр Из СтрРазделить(Запрос, "&", Ложь) Цикл

		ПозицияРавно = СтрНайти(СтрокаКлючРавноПараметр, "=");
		Если ПозицияРавно = 0 Тогда
			Ключ = СтрокаКлючРавноПараметр;
			Значение = Неопределено;
		Иначе
			Ключ = Лев(СтрокаКлючРавноПараметр, ПозицияРавно - 1);
			Значение = Сред(СтрокаКлючРавноПараметр, ПозицияРавно + 1);
		КонецЕсли;

		Если ПараметрыЗапроса.Получить(Ключ) <> Неопределено Тогда

			Если ТипЗнч(ПараметрыЗапроса[Ключ]) = Тип("Массив") Тогда
				ПараметрыЗапроса[Ключ].Добавить(Значение);
			Иначе
				Значения = Новый Массив;
				Значения.Добавить(ПараметрыЗапроса[Ключ]);
				Значения.Добавить(Значение);
				ПараметрыЗапроса[Ключ] = Значения;
			КонецЕсли;

		Иначе

			ПараметрыЗапроса.Вставить(Ключ, Значение);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура РазбитьСтрокуПоРазделителю(ИзвлекаемаяЧасть, ОстальнаяЧасть, Разделитель, Инверсия = Ложь)

	Индекс = СтрНайти(ОстальнаяЧасть, Разделитель);
	Если Индекс Тогда

		ИзвлекаемаяЧасть = Лев(ОстальнаяЧасть, Индекс - 1);
		ОстальнаяЧасть = Сред(ОстальнаяЧасть, Индекс + СтрДлина(Разделитель));

		Если Инверсия Тогда
			ДляОбмена = ИзвлекаемаяЧасть;
			ИзвлекаемаяЧасть = ОстальнаяЧасть;
			ОстальнаяЧасть = ДляОбмена;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Функция РазделитьПоПервомуНайденномуРазделителю(Строка, Разделители)

	МинимальныйИндекс = СтрДлина(Строка);
	ПервыйРазделитель = "";

	Для Каждого Разделитель Из Разделители Цикл

		Индекс = СтрНайти(Строка, Разделитель);

		Если Индекс = 0 Тогда
			Продолжить;
		КонецЕсли;

		Если Индекс < МинимальныйИндекс Тогда
			МинимальныйИндекс = Индекс;
			ПервыйРазделитель = Разделитель;
		КонецЕсли;

	КонецЦикла;

	Результат = Новый Массив;
	Если ЗначениеЗаполнено(ПервыйРазделитель) Тогда
		Результат.Добавить(Лев(Строка, МинимальныйИндекс - 1));
		Результат.Добавить(Сред(Строка, МинимальныйИндекс + СтрДлина(ПервыйРазделитель)));
		Результат.Добавить(ПервыйРазделитель);
	Иначе
		Результат.Добавить(Строка);
		Результат.Добавить("");
		Результат.Добавить(Неопределено);
	КонецЕсли;

	Возврат Результат;

КонецФункции