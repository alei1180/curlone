Перем _ОписаниеЗапроса; // ОписаниеЗапроса
Перем _ИмяПараметра;    // Строка

// Конструктор объекта.
//
// Параметры:
//   ОписаниеЗапроса - ОписаниеЗапроса
//   ИмяПараметра    - Строка - Имя переменной
Процедура ПриСозданииОбъекта(ОписаниеЗапроса, ИмяПараметра)
	_ОписаниеЗапроса = ОписаниеЗапроса;
	_ИмяПараметра = ИмяПараметра;
КонецПроцедуры

// Формирует программный код создания и настройки объекта ИнтернетПрокси.
//
// Возвращаемое значение:
//   Строка
Функция Получить() Экспорт

	Конструктор = Новый КонструкторПрограммногоКода(_ОписаниеЗапроса.ИменаПеременных);
	
	ИспользоватьАутентификациюОС = _ОписаниеЗапроса.ТипАутентификацииПрокси = ТипыАутентификации.NTLM;

	ПараметрыФункции = Новый Массив;
	ПараметрыФункции.Добавить(Конструктор.ПараметрВСтроку(_ОписаниеЗапроса.ПроксиПротокол));
	ПараметрыФункции.Добавить(Конструктор.ПараметрВСтроку(_ОписаниеЗапроса.ПроксиСервер));
	ПараметрыФункции.Добавить(Конструктор.НеобязательныйПараметрВСтроку(_ОписаниеЗапроса.ПроксиПорт));
	ПараметрыФункции.Добавить(Конструктор.НеобязательныйПараметрВСтроку(_ОписаниеЗапроса.ПроксиПользователь));
	ПараметрыФункции.Добавить(Конструктор.НеобязательныйПараметрВСтроку(_ОписаниеЗапроса.ПроксиПароль));
	ПараметрыФункции.Добавить(?(ИспользоватьАутентификациюОС, "", "Ложь")); // Значение по умолчанию Истина

	Конструктор
		.ДобавитьСтроку("%1 = Новый ИнтернетПрокси();", _ИмяПараметра)
		.ДобавитьСтроку("%1.Установить(%2);", 
			_ИмяПараметра,
			Конструктор.ПараметрыФункцииВСтроку(ПараметрыФункции)
		);

	Возврат Конструктор.ПолучитьРезультат();

КонецФункции