#Использовать coloratos
#Использовать "../../core"
#Использовать "../../internal"

Перем ВходящиеАргументы; // Массив из Строка
Перем Генератор; // Объект генератора программного кода
Перем РезультатКонвертации; // Строка

#Область ПрограммныйИнтерфейс

Процедура Конвертировать() Экспорт

	Генератор = Неопределено;

	Если Не НайденаКоманда() Тогда
		ВызватьИсключение "Не найдена команда convert";
	КонецЕсли;
	
	ПодготовленныеАргументы = ПодготовитьАргументы();

	Ошибки = Новый Массив();
	КонвертерКомандыCURL = Новый КонвертерКомандыCURL();

	Попытка
		РезультатКонвертации = КонвертерКомандыCURL.Конвертировать(ПодготовленныеАргументы, Генератор, Ошибки);
	Исключение
		РезультатКонвертации = "";
		Ошибки.Добавить(ОбщегоНазначения.НоваяКритичнаяОшибка(КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
	КонецПопытки;

	Для Каждого Ошибка Из Ошибки Цикл
		Цвет = ?(Ошибка.Критичная, "Красный", "Желтый");
		ЦветнойВывод.Вывести("// ");
		ЦветнойВывод.ВывестиСтроку(Ошибка.Текст, Цвет);
	КонецЦикла;

	Если ЗначениеЗаполнено(РезультатКонвертации) Тогда
		Если Ошибки.Количество() Тогда
			Консоль.Вывести(Символы.ПС);
		КонецЕсли;

		Консоль.Вывести(РезультатКонвертации);
	КонецЕсли;

КонецПроцедуры

Функция НайденаКоманда() Экспорт
	Возврат ВходящиеАргументы.Количество() И НРег(ВходящиеАргументы[0]) = "convert";	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьРезультат() Экспорт
	Возврат РезультатКонвертации;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриСозданииОбъекта(Аргументы)
	ВходящиеАргументы = Аргументы;
	РезультатКонвертации = "";
КонецПроцедуры

Функция ПодготовитьАргументы()

	ПодготовленныеАргументы = Новый Массив();
	ОбщегоНазначения.ДополнитьМассив(ПодготовленныеАргументы, ВходящиеАргументы);

	ПодготовленныеАргументы[0] = "curl";

	ПрочитатьАргументГенератора(ПодготовленныеАргументы);
	УдалитьПовторяющийАргументCurl(ПодготовленныеАргументы);
	
	Возврат ПодготовленныеАргументы;

КонецФункции

Процедура УдалитьПовторяющийАргументCurl(Аргументы)
	
	Если Аргументы.Количество() > 1 И НРег(Аргументы[1]) = "curl" Тогда
		Аргументы.Удалить(1);
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьАргументГенератора(Аргументы)
	
	ИндексАргумента = 1;

	Если Аргументы.Количество() > ИндексАргумента Тогда
		Аргумент = НРег(Аргументы[ИндексАргумента]);
		Генератор = ПолучитьГенераторПоАргументу(Аргумент);
	КонецЕсли;

	Если Генератор = Неопределено Тогда
		Генератор = ГенераторПоУмолчанию();
	Иначе
		Аргументы.Удалить(ИндексАргумента);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьГенераторПоАргументу(Аргумент)
	
	Если Аргумент = "connector" Тогда
		Возврат Новый ГенераторПрограммногоКодаКоннекторHTTP();
	ИначеЕсли Аргумент = "1c" Тогда
		Возврат Новый ГенераторПрограммногоКода1С();
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

Функция ГенераторПоУмолчанию()
	Возврат Новый ГенераторПрограммногоКода1С();
КонецФункции

#КонецОбласти