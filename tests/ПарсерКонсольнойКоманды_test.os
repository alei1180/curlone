// BSLLS:DuplicateStringLiteral-off

#Использовать asserts
#Использовать "../src/core"
#Использовать "../src/internal"

&Тест
Процедура ТестДолжен_ПроверитьОбщийСлучай() Экспорт

	КоманднаяСтрока = "myapp command -a --long-option 2> error.txt";

	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("command");
	Команда.Добавить("-a");
	Команда.Добавить("--long-option");
	Команда.Добавить("2>");
	Команда.Добавить("error.txt");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьМногострочнуюКоманду() Экспорт

	КоманднаяСтрока = "myapp command -a \
	|--long-option ""value"" \
	| 2> error.txt";

	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("command");
	Команда.Добавить("-a");
	Команда.Добавить("--long-option");
	Команда.Добавить("value");
	Команда.Добавить("2>");
	Команда.Добавить("error.txt");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПарсингКавычекСПоддержкойИнтерполяции() Экспорт

	КоманднаяСтрока = "myapp \
	|-a ""Te\""xt"" \
	|-b \"" \
	|-c ""\""\""\"""" \
	|-d ""'"" \
	|-e name=""val""";

	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Команда.Добавить("Te""xt");
	Команда.Добавить("-b");
	Команда.Добавить("""");
	Команда.Добавить("-c");
	Команда.Добавить("""""""");
	Команда.Добавить("-d");
	Команда.Добавить("'");
	Команда.Добавить("-e");
	Команда.Добавить("name=val");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПарсингКавычекБезПоддержкиИнтерполяции() Экспорт

	КоманднаяСтрока = "myapp \
	|-a 'Te\""xt' \
	|-b \' \
	|-c '""' \
	|-d name='val'";

	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");	
	Команда.Добавить("Te\""xt");
	Команда.Добавить("-b");
	Команда.Добавить("'");
	Команда.Добавить("-c");
	Команда.Добавить("""");
	Команда.Добавить("-d");
	Команда.Добавить("name=val");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);
	
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПробелВЗначенииПараметра() Экспорт

	КоманднаяСтрока = "myapp -a ' '";

	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Команда.Добавить(" ");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьОператорыСвязыванияКоманд() Экспорт

	КоманднаяСтрока = "myapp -a && myapp -b
	|myapp -c '&' &
	|cmd1 & cmd2 && cmd3 || cmd4 ; cmd5
	|cmd6&&cmd7||cmd8;cmd9";

	Эталон = Новый Массив;

	Команда = Новый Массив();
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Эталон.Добавить(Команда);

	Команда = Новый Массив();
	Команда.Добавить("myapp");
	Команда.Добавить("-b");
	Эталон.Добавить(Команда);

	Команда = Новый Массив();
	Команда.Добавить("myapp");
	Команда.Добавить("-c");
	Команда.Добавить("&");
	Эталон.Добавить(Команда);

	Для к = 1 По 9 Цикл
		Команда = Новый Массив();
		Команда.Добавить("cmd" + к);
		Эталон.Добавить(Команда);
	КонецЦикла;

	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПоддержкуПробельныхСимволов() Экспорт

	КоманднаяСтрока = "myapp -a \
	|" + Символы.Таб + "-b \
	|" + Символы.ВТаб + "-c \
	|" + Символы.ВК + "-d \
	|" + Символы.ПФ + "-e";
	
	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Команда.Добавить("-b");
	Команда.Добавить("-c");
	Команда.Добавить("-d");
	Команда.Добавить("-e");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПоддержкуПустогоЗначения() Экспорт

	КоманднаяСтрока = "myapp1 -a '' -b ' '
	|myapp2 url ''
	|myapp3 url """"
	|myapp4 url''
	|myapp5 url""""
	|myapp6 url '' -f
	|myapp7 url """" -f
	|myapp8 url''''
	|myapp9 url""""""""
	|myapp10 url '' '' ''
	|myapp11 url """" """"";

	Эталон = Новый Массив;

	Команда = Новый Массив;
	Команда.Добавить("myapp1");
	Команда.Добавить("-a");
	Команда.Добавить("");
	Команда.Добавить("-b");
	Команда.Добавить(" ");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp2");
	Команда.Добавить("url");
	Команда.Добавить("");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp3");
	Команда.Добавить("url");
	Команда.Добавить("");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp4");
	Команда.Добавить("url");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp5");
	Команда.Добавить("url");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp6");
	Команда.Добавить("url");
	Команда.Добавить("");
	Команда.Добавить("-f");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp7");
	Команда.Добавить("url");
	Команда.Добавить("");
	Команда.Добавить("-f");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp8");
	Команда.Добавить("url");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp9");
	Команда.Добавить("url");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp10");
	Команда.Добавить("url");
	Команда.Добавить("");
	Команда.Добавить("");
	Команда.Добавить("");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp11");
	Команда.Добавить("url");
	Команда.Добавить("");
	Команда.Добавить("");
	Эталон.Добавить(Команда);

	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_РаспарситьКомандуСПробельнымиСимволамиВКонце() Экспорт

	КоманднаяСтрока = "myapp -a  ";
	
	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_РаспарситьКомандуСДвумяСимволамиПереносаСтрокиВКонце() Экспорт

	КоманднаяСтрока = "myapp -a" + Символы.ПС + Символы.ПС;
	
	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_РаспарситьКомандуСОткрытойКавычкойВКонце() Экспорт

	КоманднаяСтрока = "myapp -a """;
	
	Эталон = Новый Массив;
	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Эталон.Добавить(Команда);
	
	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_РаспарситьКомандуСМногострочнойСтрокой() Экспорт

	КоманднаяСтрока = "myapp -a ""line1
	|line2
	|\""line3\""
	|line'4'"" \
	|-b
	|
	|myapp -a 'line1
	|line2
	|""line3""
	|line4' \
	|-b";
	
	Эталон = Новый Массив;

	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Команда.Добавить("line1
	|line2
	|""line3""
	|line'4'");
	Команда.Добавить("-b");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp");
	Команда.Добавить("-a");
	Команда.Добавить("line1
	|line2
	|""line3""
	|line4");
	Команда.Добавить("-b");
	Эталон.Добавить(Команда);

	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

&Тест
Процедура ТестДолжен_РаспарситьПеременные() Экспорт

	КоманднаяСтрока = "myapp1 -a $VAR
	|myapp2 ""$VAR""
	|myapp3 ""\$VAR""
	|myapp4 -a '$VAR'
	|myapp5 -a ""Text$VAR text""";

	ХешСтрока = ОбщийНаборИнструментов.ХешСтрокаИмениПеременной("VAR");
	
	Эталон = Новый Массив;

	Команда = Новый Массив;
	Команда.Добавить("myapp1");
	Команда.Добавить("-a");
	Команда.Добавить("$ENV_" + ХешСтрока);
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp2");
	Команда.Добавить("$ENV_" + ХешСтрока);
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp3");
	Команда.Добавить("$VAR");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp4");
	Команда.Добавить("-a");
	Команда.Добавить("$VAR");
	Эталон.Добавить(Команда);

	Команда = Новый Массив;
	Команда.Добавить("myapp5");
	Команда.Добавить("-a");
	Команда.Добавить("Text$ENV_" + ХешСтрока + " text");
	Эталон.Добавить(Команда);

	Парсер = Новый ПарсерКонсольнойКоманды();
	Результат = Парсер.Распарсить(КоманднаяСтрока);

	ПроверитьРезультатПарсинга(Результат, Эталон);

КонецПроцедуры

Процедура ПроверитьРезультатПарсинга(Результат, Эталон)

	АргументыКоманд = Результат.АргументыКоманд;

	Ожидаем.Что(АргументыКоманд, "Количество команд").ИмеетДлину(Эталон.Количество());

	Для Инд1 = 0 По АргументыКоманд.ВГраница() Цикл
		Заголовок = СтрШаблон("Инд1: %1", Инд1);
		Ожидаем.Что(АргументыКоманд[Инд1], Заголовок).ИмеетДлину(Эталон[Инд1].Количество());

		Для Инд2 = 0 По АргументыКоманд[Инд1].ВГраница() Цикл
			Заголовок = СтрШаблон("Инд1: %1, Инд2 : %2", Инд1, Инд2);
			Ожидаем.Что(АргументыКоманд[Инд1][Инд2], Заголовок).Равно(Эталон[Инд1][Инд2]);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры