// BSLLS:DuplicateStringLiteral-off

#Использовать 1connector
#Использовать jason

Перем ПроцессВебСервера; // Процесс

&Инициализация
Процедура Инициализация() Экспорт

	ЗадержкаПослеЗапуска = 1000;

	ПроцессВебСервера = СоздатьПроцесс("oscript src/main.os web", ".");
	ПроцессВебСервера.Запустить();

	Приостановить(ЗадержкаПослеЗапуска);

КонецПроцедуры

&Завершение
Процедура Завершение() Экспорт
	ПроцессВебСервера.Завершить();
КонецПроцедуры

&Тест
Процедура ТестДолжен_ВыполнитьКонвертацию() Экспорт
	
	Сериализатор = Новый СериализаторJson();

	ТестовыеСлучаи = НоваяТаблицаТестовыхСлучаев();

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		Неопределено,
		Неопределено,
		Неопределено,
		"Соединение = Новый HTTPСоединение(""example.com"", 80);
		|HTTPЗапрос = Новый HTTPЗапрос(""/"");
		|
		|HTTPОтвет = Соединение.ВызватьHTTPМетод(""GET"", HTTPЗапрос);"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		"1c",
		Неопределено,
		Неопределено,
		"Соединение = Новый HTTPСоединение(""example.com"", 80);
		|HTTPЗапрос = Новый HTTPЗапрос(""/"");
		|
		|HTTPОтвет = Соединение.ВызватьHTTPМетод(""GET"", HTTPЗапрос);"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		Неопределено,
		"en",
		Неопределено,
		"Connection = New HTTPConnection(""example.com"", 80);
		|HTTPRequest = New HTTPRequest(""/"");
		|
		|HTTPResponse = Connection.CallHTTPMethod(""GET"", HTTPRequest);"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		"connector",
		Неопределено,
		Неопределено,
		"Результат = КоннекторHTTP.Get(""http://example.com"");"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		"connector",
		"en",
		Неопределено,
		"Result = HTTPConnector.Get(""http://example.com"");"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		"connector",
		"ru",
		Неопределено,
		"Результат = КоннекторHTTP.Get(""http://example.com"");"
	);

	НовыйТестовыйСлучай(
		ТестовыеСлучаи,
		"curl http://example.com",
		"connector",
		Неопределено,
		"json",
		"Результат = КоннекторHTTP.GetJson(""http://example.com"");"
	);

	Для Каждого ТестовыйСлучай Из ТестовыеСлучаи Цикл

		ПараметрыЗапроса = Новый Соответствие();
		ПараметрыЗапроса.Вставить("cmd", ТестовыйСлучай.Команда);

		Если ТестовыйСлучай.Язык <> Неопределено Тогда
			ПараметрыЗапроса.Вставить("lang", ТестовыйСлучай.Язык);
		КонецЕсли;

		Если ТестовыйСлучай.Локаль <> Неопределено Тогда
			ПараметрыЗапроса.Вставить("locale", ТестовыйСлучай.Локаль);
		КонецЕсли;

		Если ТестовыйСлучай.ТипОтвета <> Неопределено Тогда
			ПараметрыЗапроса.Вставить("response-type", ТестовыйСлучай.ТипОтвета);
		КонецЕсли;

		Json = Сериализатор.Сериализовать(ПараметрыЗапроса);

		// Действие
		Ответ = ВыполнитьЗапросКонвертации(ПараметрыЗапроса);

		// Проверка
		Ожидаем.Что(Ответ["result"], Json).Равно(ТестовыйСлучай.Результат);

	КонецЦикла;

КонецПроцедуры

Функция НоваяТаблицаТестовыхСлучаев()
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Команда");
	Таблица.Колонки.Добавить("Язык");
	Таблица.Колонки.Добавить("Локаль");
	Таблица.Колонки.Добавить("ТипОтвета");
	Таблица.Колонки.Добавить("Результат");

	Возврат Таблица;

КонецФункции

Процедура НовыйТестовыйСлучай(ТестовыеСлучаи, Команда, Язык, Локаль, ТипОтвета, Результат)

	Строка = ТестовыеСлучаи.Добавить();
	Строка.Команда = Команда;
	Строка.Язык = Язык;
	Строка.Локаль = Локаль;
	Строка.ТипОтвета = ТипОтвета;
	Строка.Результат = Результат;

КонецПроцедуры

Функция ВыполнитьЗапросКонвертации(ПараметрыЗапроса)
	Возврат КоннекторHTTP.Get("http://127.0.0.1:3333/api/v1/convert", ПараметрыЗапроса).Json();
КонецФункции